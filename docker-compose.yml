services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: smartbin-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./docs:/app/docs:ro
    environment:
      - MONGODB_URI=${MONGODB_URI}
      - MONGODB_DB_NAME=${MONGODB_DB_NAME}
      - ROBOFLOW_API_KEY=${ROBOFLOW_API_KEY}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_REDIRECT_URI=${GOOGLE_REDIRECT_URI}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ALGORITHM=HS256
      - JWT_ACCESS_TOKEN_EXPIRE_MINUTES=10080
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - ADMIN_EMAILS=${ADMIN_EMAILS}
      - MIN_WITHDRAWAL_POINTS=${MIN_WITHDRAWAL_POINTS}
    depends_on:
      - mongodb
      - redis

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      args:
        - NEXT_PUBLIC_BROWSER_API_URL=${NEXT_PUBLIC_BROWSER_API_URL}
        - NEXT_PUBLIC_CONTAINER_API_URL=${NEXT_PUBLIC_CONTAINER_API_URL}
        - NEXT_PUBLIC_GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
        - NEXT_PUBLIC_GOOGLE_REDIRECT_URI=${GOOGLE_REDIRECT_URI}
    container_name: smartbin-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_BROWSER_API_URL=${NEXT_PUBLIC_BROWSER_API_URL}
      - NEXT_PUBLIC_CONTAINER_API_URL=${NEXT_PUBLIC_CONTAINER_API_URL}
      - NEXT_PUBLIC_GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - NEXT_PUBLIC_GOOGLE_REDIRECT_URI=${GOOGLE_REDIRECT_URI}
    depends_on:
      - backend
      - mongodb

  rag-test-frontend:
    image: nginx:alpine
    container_name: smartbin-rag-test
    restart: unless-stopped
    ports:
      - "8081:80"
    volumes:
      - ./rag-test-frontend:/usr/share/nginx/html
      - ./rag-test-frontend/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend

  mongodb:
    image: mongo:5.0
    container_name: smartbin-mongodb
    restart: unless-stopped
    volumes:
      - mongo_data:/data/db

  redis:
    image: redis:alpine
    container_name: smartbin-redis
    restart: unless-stopped

  iot_simulator:
    build:
      context: ./iot_simulator
      dockerfile: Dockerfile
    container_name: smartbin-iot-sim
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - backend

volumes:
  mongo_data:
